---
import { CostellationComponent } from "../angular/components/costellation.component";
import { StarComponent } from "../angular/components/star.component";
import GoDown from "./goDown.astro";
const repos: any[] = await fetch("https://api.github.com/users/frabaddo/repos")
  .then((response) => response.json())
  .then((data) => {
    if (data.message) {
      throw new Error(data.message);
    }
    return data.map((el: any)=>{
      return {...el, image: "/github-mark-white.svg" };
    });
  })
  .catch((error) => {
    console.error("Error fetching repositories:", error);
    return [
      {
        id: 1,
        name: "Test 1",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
      {
        id: 2,
        name: "Test 2",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
      {
        id: 3,
        name: "Test 3",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
      {
        id: 4,
        name: "Test 4",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
      {
        id: 5,
        name: "Test 5",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
      {
        id: 6,
        name: "Test 6",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
      {
        id: 7,
        name: "Test 7",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
      {
        id: 8,
        name: "Test 8",
        description: "Failed to load repositories.",
        html_url: "",
        image: "/github-mark-white.svg",
      },
    ];
  });
---

    <!-- <ShootingStarsComponent {...({ labels: repos.map(r=>r.name) } as any)} /> -->
    <div id="costellation-container">
      <h2 class="sun-title">My Repositories</h2>
      <CostellationComponent {...({ planets: repos } as any)} client:visible/>
      <StarComponent {...({ type: 0 } as any)} />
      <StarComponent {...({ type: 1 } as any)} />
      <StarComponent {...({ type: 2 } as any)} />
      <StarComponent {...({ type: 3 } as any)} />

     <GoDown href="#repos-container"></GoDown>

    <div id="repos-container">
      {
        repos.map((repo) => (
          <div class="box">
              <a href={repo.html_url} target="_blank">
                <div class="content">
                  <img src={repo.image} alt={repo.name + "_ImageAlt"} />
                  <h3>{repo.name}</h3>
                  {
                    repo.description ? <p>{repo.description} </p> : <></>
                  }
                </div>
              </a>
          </div>
        ))
      }
    </div>
  
  <style>
  
    #costellation-container {
      display: block;
      height: 100vh;
      scroll-snap-align: start;
      position: relative;
    }
  
    #costellation-container h2 {
      position: absolute;
      top: 2rem;
      width: calc(100% - 4rem);
      left: 50%;
      transform: translateX(-50%);
    }
  
    .box .content {
      display: flex;
      gap: 2rem;
      flex-direction: row;
      align-items: center;
    }

    #repos-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
      gap: 4rem;
      padding: 2rem 8rem 5rem 8rem;
      scroll-snap-align: start;
      box-sizing: border-box;
      min-height: 100vh;
      align-content: flex-start;
    }
  
    @media (max-width: 1000px) {
      #repos-container {
        padding: 2rem 2rem 5rem 2rem;
      }
    }
  
    .box {
      position: relative;
      display: flex;
      flex-direction: column;
      
      animation: cardEntry 1s linear;
      animation-duration: 1ms;
      animation-timeline: view();
      animation-range: entry 0% entry 100%;
    }
  
    @keyframes cardEntry {
  
      0%{
        opacity: 0;
        transform: translateX(2rem);
      }
      100%{
        opacity: 1;
        transform: translateX(0rem);
      }
    }
  
    .box h3 {
      font-size: 1.5rem;
      white-space: pre-line;
      word-break: break-word;
      color: #fff;
      margin: 0;
      display: inline;
    }

    .box a {
      flex: 1;
      display: flex;
    }

    .box img {
    display: inline-block;
    width: 2rem;
    height: 2rem;
  }
  </style>